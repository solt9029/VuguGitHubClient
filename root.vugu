<div class="root">
	<div class="container">
		<div class="row">
			<h1>VuguGitHubClient</h1>
			<div class="input-group block">
				<input type="text" placeholder="user" id="user" class="form-control" @change="data.HandleChange(event)">
				<div class="input-group-append">
					<button class="btn btn-primary" @click="data.HandleClick(event)">find repos</button>
				</div>
			</div>
			<div class="block">
				<div vg-if="data.IsLoading">isLoading...</div>
				<div vg-if='data.Error != ""' vg-html="data.Error"></div>
				<div vg-if="len(data.Repos) > 0">
					<ul class="list-group">
						<repo-item vg-for="_, repo := range data.Repos" :name="repo.Name" :html-url="repo.HtmlUrl"></repo-item>
					</ul>
				</div>
			</div>
		</div>
	</div>

	<link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css" integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T" crossorigin="anonymous">
</div>

<style>
.block {
	margin-bottom: 30px;
}
</style>

<script type="application/x-go">
import (
	"encoding/json"
	"log"
	"net/http"
)

type RootData struct {
	Repos     []Repo
	IsLoading bool
	User      string
	Error     string
}

type Repo struct {
	Name    string `json:"name"`
	HtmlUrl string `json:"html_url"`
}

func (data *RootData) HandleChange(event *vugu.DOMEvent) {
	data.User = event.JSEvent().Get("target").Get("value").String()
	log.Printf("user: %v", data.User)
}

func (data *RootData) HandleClick(event *vugu.DOMEvent) {
	data.Repos = []Repo{}
	eventEnv := event.EventEnv()
	data.IsLoading = true
	data.Error = ""

	go func() {
		eventEnv.Lock()
		defer eventEnv.UnlockRender()
		defer func() {
			data.IsLoading = false
		}()

		res, err := http.Get("https://api.github.com/users/" + data.User + "/repos")
		if err != nil {
			log.Printf("Error fetching: %v", err)
			data.Error = "Error fetching."
			return
		}
		defer res.Body.Close()

		var newRepos []Repo
		err = json.NewDecoder(res.Body).Decode(&newRepos)
		if err != nil {
			log.Printf("Error JSON decoding: %v", err)
			data.Error = "Error JSON decoding."
			return
		}

		data.Repos = newRepos
	}()
}
</script>
